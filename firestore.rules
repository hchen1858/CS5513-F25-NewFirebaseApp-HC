rules_version = '2';
service cloud.firestore {

  // Determine if the value of the field "key" is the same
  // before and after the request.
  function unchanged(key) {
    return (key in resource.data) 
      && (key in request.resource.data) 
      && (resource.data[key] == request.resource.data[key]);
  }

  match /databases/{database}/documents {
    // Creaturess:
    //   - Authenticated user can read
    //   - Authenticated user can create/update (create disallowed since for demo purposes only)
    //   - Updates are allowed if no fields are added and lastReviewUserID is valid (per Ethan's security fix)
    //   - Deletes are not allowed (default)
    match /creatures/{creatureId} {
      allow read;
      //allow update: if request.resource.data.lastReviewUserId != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null
                    && unchanged("name");
      
        // Ratings:
        //   - Authenticated user can read
        //   - Authenticated user can create if userId matches
        //   - Deletes and updates are not allowed (default)
        match /ratings/{ratingId} {
          allow read;
          //Next line works for writing new reviews, since userId is in sent data (per Ethan's security fix)
          //allow write: if request.resource.data.userId != null;
          allow create: if request.auth != null;
          allow update: if request.auth != null
                        && request.resource.data.userId == request.auth.uid;
      }
    }
  }
}
